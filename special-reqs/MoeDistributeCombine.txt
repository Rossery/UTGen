### tiling-key 取值范围说明

- **A5 路径（C310）**  
  - 固定：`BASE_A5 = 1000000000000000000`

- **A2/A3 路径（非 C310）基础分支**  
  - TP=2：`INIT_TILINGKEY_TP_2 = 1100`  
  - TP=1：`INIT_TILINGKEY_TP_1 = 1000`

- **通信量化模式（commQuantMode，A2/A3 非 layered 分支）**  
  - 非 INT8：`+0`  
  - INT8（commQuantMode == 2）：`+20`

- **A2 layered/特殊通信分支（仅 A2）**  
  - A2 layered 基础：`TILING_KEY_LAYERED_COMM_A2 = 3000`  
  - A2 layered + INT8：`+100`（得到 `3100`）

- **是否带 bias / 是否 ND2NZ**  
  - 本算子未涉及 bias 与 ND2NZ：不计入

- **通信算法（不计入 tiling-key）**  
  - AlltoAll：`level0:fullmesh;level1:pairwise`  
  - ReduceScatter：`level0:ring`  
  - 部分路径含 `BatchWrite=level0:fullmesh` 配置（不计入 tiling-key）

### 计算规则
- A5（C310）：  
  `tilingKey = 1000000000000000000`

- A2/A3 非 layered：  
  `tilingKey = (tpWorldSize == 2 ? 1100 : 1000) + (commQuantMode == 2 ? 20 : 0)`

- A2 layered：  
  `tilingKey = 3000 + (commQuantMode == 2 ? 100 : 0)`

### 与 Kernel 分支映射（非 C310）
- `1100`：TP=2，非 INT8 → MoeDistributeCombine<..., true, false>
- `1000`：TP=1，非 INT8 → MoeDistributeCombine<..., false, false>
- `1120`：TP=2，INT8 → MoeDistributeCombine<..., true, true>
- `1020`：TP=1，INT8 → MoeDistributeCombine<..., false, true>
- `2000`：A2 常规通信 → MoeDistributeCombineA2
- `3000`：A2 layered（AICPU/AIV 由运行时判定） → Layered A2（bf16/fp16）
- `3100`：A2 layered + INT8 → Layered A2（int8）

### 示例
- A5：`1000000000000000000`
- A2/A3：tp=2，非 INT8：`1100`
- A2/A3：tp=2，INT8：`1100 + 20 = 1120`
- A2 layered：INT8：`3000 + 100 = 3100`
